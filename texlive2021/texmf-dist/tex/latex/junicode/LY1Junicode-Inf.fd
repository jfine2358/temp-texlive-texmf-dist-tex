%% Generated by autoinst on 2020/02/27
%%
\ProvidesFile{LY1Junicode-Inf.fd}
    [2020/02/27 (autoinst)  Font definitions for LY1/Junicode-Inf.]

\ifcsname s@fct@alias\endcsname\else
\gdef\s@fct@alias{\sub@sfcnt\@font@aliasinfo}
\gdef\@font@aliasinfo#1{%
    \@font@info{Font\space shape\space `\curr@fontshape'\space will
        \space be\space aliased\MessageBreak to\space `\mandatory@arg'}%
}
\fi

\expandafter\ifx\csname Junicode@scale\endcsname\relax
    \let\Junicode@@scale\@empty
\else
    \edef\Junicode@@scale{s*[\csname Junicode@scale\endcsname]}%
\fi

\DeclareFontFamily{LY1}{Junicode-Inf}{}


%   ----  regular  ----

\DeclareFontShape{LY1}{Junicode-Inf}{regular}{it}{
      <-> \Junicode@@scale Junicode-Italic-inf-ly1
}{}

\DeclareFontShape{LY1}{Junicode-Inf}{regular}{n}{
      <-> \Junicode@@scale Junicode-inf-ly1
}{}

\DeclareFontShape{LY1}{Junicode-Inf}{regular}{sl}{
      <-> ssub * Junicode-Inf/regular/it
}{}

%
%  Extra 'alias' rules to map the standard NFSS codes to our fancy names
%

%   m --> regular

\DeclareFontShape{LY1}{Junicode-Inf}{m}{sl}{
      <-> alias * Junicode-Inf/regular/sl
}{}

\DeclareFontShape{LY1}{Junicode-Inf}{m}{it}{
      <-> alias * Junicode-Inf/regular/it
}{}

\DeclareFontShape{LY1}{Junicode-Inf}{m}{n}{
      <-> alias * Junicode-Inf/regular/n
}{}

\endinput
