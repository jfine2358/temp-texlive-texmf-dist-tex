%!PS-Adobe-3.0 EPSF-3.0
%Produced by poppler pdftops version: 20.09.0 (http://poppler.freedesktop.org)
%%Creator: Adobe Illustrator 25.0 (Macintosh)
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 400 103
%%HiResBoundingBox: 0 0 399.204 102.047
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2011 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfSetupPaper {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfPatternCS false def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Tp { /pdfPatternCS exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfImM { fCol imagemask skipEOD } def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
%%EndSetup
pdfStartPage
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
0 0 399.204 102.047 re
W
q
q
0 0 399.204 102.047 re
W
[/Separation (SW R=173 G=165 B=0) /DeviceRGB
{ dup 0 lt { pop 0 } { dup 1 gt { pop 1 } if } ifelse
0 index 1 exp -0.321569 mul 1 add
dup 0 lt { pop 0 } { dup 1 gt { pop 1 } if } ifelse
1 index 1 exp -0.352941 mul 1 add
dup 0 lt { pop 0 } { dup 1 gt { pop 1 } if } ifelse
2 index 1 exp -1 mul 1 add
dup 0 lt { pop 0 } { dup 1 gt { pop 1 } if } ifelse
4 3 roll pop 
}
] {} cs
[1] sc
[1] sc
false op
false OP
q
[1 0 0 1 96.9447 -0.0002] cm
0 0 m
-91.842 0 l
-94.649 0 -96.945 2.296 -96.945 5.103 c
-96.945 96.945 l
-96.945 99.751 -94.649 102.047 -91.842 102.047 c
0 102.047 l
2.807 102.047 5.103 99.751 5.103 96.945 c
5.103 5.103 l
5.103 2.296 2.807 0 0 0 c
f
Q
/DeviceRGB {} cs
[0 0 0] sc
[1 1 1] sc
q
[1 0 0 1 65.4696 47.9998] cm
0 0 m
0.433 -12.339 -4.641 -21.26 -15.822 -21.26 c
-24.531 -21.26 -33.348 -14.736 -33.348 -1.8 c
-33.348 32.893 l
-47.688 32.893 l
-47.688 -2.528 l
-47.688 -15.945 -38.701 -29.706 -17.998 -29.706 c
2.097 -29.706 10.183 -15.285 10.274 -3.326 c
24.946 -5.587 31.672 5.36 29.754 12.814 c
27.192 9.855 23.094 7.234 10.292 10.865 c
10.292 32.893 l
0 32.893 l
0 14.355 l
-20.106 20.955 -24.864 2.638 -24.864 2.638 c
-24.864 2.638 -15.461 7.81 0 0 c
f
Q
q
[1 0 0 1 135.4232 60.3768] cm
0 0 m
-4.047 0 -7.278 2.103 -7.278 6.437 c
-7.278 18.182 l
-3.495 18.182 l
-3.495 6.885 l
-3.495 4.047 -1.366 2.97 0.446 2.97 c
2.391 2.97 4.204 4.047 4.204 6.779 c
4.204 18.182 l
7.936 18.182 l
7.936 6.779 l
7.936 2.365 4.782 0 0 0 c
f
Q
q
[1 0 0 1 156.1332 60.6922] cm
0 0 m
0 8.092 l
0 9.958 -0.998 10.904 -2.653 10.904 c
-3.6 10.904 -4.519 10.615 -5.176 10.195 c
-5.176 0 l
-8.671 0 l
-8.671 13.269 l
-5.308 13.532 l
-5.359 11.693 l
-5.255 11.693 l
-4.282 12.77 -2.68 13.715 -0.84 13.715 c
1.524 13.715 3.469 12.139 3.469 9.118 c
3.469 0 l
0 0 l
h
f
Q
163.285 74.092 m
166.806 74.092 l
166.806 60.692 l
163.285 60.692 l
163.285 74.092 l
h
165.045 76.563 m
164.046 76.563 163.205 77.404 163.205 78.428 c
163.205 79.452 164.046 80.241 165.045 80.241 c
166.07 80.241 166.884 79.452 166.884 78.428 c
166.884 77.404 166.07 76.563 165.045 76.563 c
f
q
[1 0 0 1 177.0023 60.6141] cm
0 0 m
-2.943 0 l
-8.304 13.478 l
-4.362 13.478 l
-1.971 6.385 l
-1.577 5.281 -1.262 3.389 -1.262 3.389 c
-1.262 3.389 -0.946 5.255 -0.552 6.385 c
1.839 13.478 l
5.386 13.478 l
0 0 l
h
f
Q
q
[1 0 0 1 189.644 72.1214] cm
0 0 m
-1.682 0 -2.732 -1.603 -2.916 -3.205 c
2.732 -3.205 l
2.732 -1.444 1.734 0 0 0 c
5.833 -5.228 m
-3.048 -5.228 l
-2.969 -7.435 -1.497 -9.117 0.973 -9.117 c
2.549 -9.117 3.968 -8.775 5.544 -8.17 c
5.387 -10.641 l
3.758 -11.297 2.155 -11.718 0.026 -11.718 c
-3.994 -11.718 -6.437 -8.933 -6.437 -4.992 c
-6.437 -0.709 -3.652 2.286 0.289 2.286 c
4.1 2.286 5.965 -0.314 5.965 -3.311 c
5.965 -3.915 5.912 -4.755 5.833 -5.228 c
f
Q
q
[1 0 0 1 206.2279 70.4398] cm
0 0 m
-0.684 0.395 -1.576 0.657 -2.417 0.657 c
-3.231 0.657 -4.021 0.315 -4.467 -0.157 c
-4.467 -9.748 l
-7.962 -9.748 l
-7.962 3.521 l
-4.65 3.811 l
-4.756 1.419 l
-4.65 1.419 l
-3.968 2.917 -2.68 3.968 -1.235 3.968 c
-0.604 3.968 0.105 3.811 0.552 3.548 c
0 0 l
h
f
Q
q
[1 0 0 1 211.9848 60.4032] cm
0 0 m
-1.734 0 -3.127 0.368 -4.283 0.999 c
-3.889 3.626 l
-2.681 2.996 -1.183 2.575 0.105 2.575 c
1.209 2.575 2.207 2.943 2.207 3.915 c
2.207 6.044 -3.862 5.57 -3.862 9.853 c
-3.862 12.559 -1.393 14.004 1.472 14.004 c
2.891 14.004 4.361 13.611 5.334 13.19 c
4.939 10.667 l
3.915 11.062 2.549 11.429 1.287 11.429 c
0.342 11.429 -0.473 11.062 -0.473 10.3 c
-0.473 8.198 5.623 8.619 5.623 4.389 c
5.623 1.472 3.074 0 0 0 c
f
Q
220.369 74.092 m
223.89 74.092 l
223.89 60.692 l
220.369 60.692 l
220.369 74.092 l
h
222.129 76.563 m
221.13 76.563 220.289 77.404 220.289 78.428 c
220.289 79.452 221.13 80.241 222.129 80.241 c
223.154 80.241 223.968 79.452 223.968 78.428 c
223.968 77.404 223.154 76.563 222.129 76.563 c
f
q
[1 0 0 1 231.6957 60.4032] cm
0 0 m
-2.364 0 -3.889 1.472 -3.889 3.731 c
-3.889 4.493 -3.81 7.988 -3.81 10.089 c
-3.81 11.219 l
-5.071 11.219 l
-5.071 12.585 l
-0.735 16.606 l
-0.394 16.606 l
-0.394 13.689 l
3.862 13.689 l
3.862 11.219 l
-0.394 11.219 l
-0.394 11.009 -0.446 6.727 -0.446 4.914 c
-0.446 3.495 0.395 2.864 1.682 2.864 c
2.365 2.864 3.18 2.943 3.968 3.206 c
3.968 0.788 l
2.838 0.315 1.498 0 0 0 c
f
Q
q
[1 0 0 1 244.4418 60.6658] cm
0 0 m
-1.419 -3.626 -3.416 -6.753 -6.674 -6.753 c
-7.725 -6.753 -8.671 -6.49 -9.249 -6.148 c
-8.697 -3.626 l
-8.146 -3.836 -7.515 -3.968 -6.806 -3.968 c
-4.992 -3.968 -3.783 -1.576 -3.048 0.158 c
-8.355 13.426 l
-4.414 13.426 l
-1.971 6.464 l
-1.603 5.387 -1.287 3.442 -1.287 3.442 c
-1.287 3.442 -0.894 5.334 -0.525 6.464 c
1.734 13.426 l
5.229 13.426 l
0 0 l
h
f
Q
q
[1 0 0 1 262.8656 71.8324] cm
0 0 m
-2.023 0 -3.285 -1.918 -3.285 -4.334 c
-3.285 -6.778 -1.971 -8.854 0.078 -8.854 c
2.049 -8.854 3.39 -6.936 3.39 -4.544 c
3.39 -2.075 2.075 0 0 0 c
-0.237 -11.429 m
-4.283 -11.429 -6.885 -8.433 -6.885 -4.65 c
-6.885 -0.42 -4.1 2.575 0.314 2.575 c
4.361 2.575 6.963 -0.42 6.963 -4.204 c
6.963 -8.433 4.151 -11.429 -0.237 -11.429 c
f
Q
q
[1 0 0 1 279.8959 78.4017] cm
0 0 m
-0.499 0.184 -1.13 0.342 -1.708 0.342 c
-2.707 0.342 -3.495 -0.263 -3.495 -1.787 c
-3.495 -4.31 l
-0.236 -4.31 l
-0.236 -6.832 l
-3.495 -6.832 l
-3.495 -17.709 l
-6.989 -17.709 l
-6.989 -6.832 l
-8.671 -6.832 l
-8.671 -4.703 l
-6.989 -4.31 l
-6.989 -1.944 l
-6.989 1.13 -4.809 2.995 -1.892 2.995 c
-0.999 2.995 -0.053 2.732 0.499 2.443 c
0 0 l
h
f
Q
q
[1 0 0 1 294.5609 73.304] cm
0 0 m
-0.236 0.71 -0.447 2.103 -0.447 2.103 c
-0.447 2.103 -0.657 0.763 -0.92 0 c
-2.759 -5.36 l
1.865 -5.36 l
0 0 l
h
4.178 -12.612 m
2.549 -7.909 l
-3.416 -7.909 l
-4.992 -12.612 l
-8.855 -12.612 l
-2.365 5.255 l
1.786 5.255 l
8.276 -12.612 l
4.178 -12.612 l
h
f
Q
q
[1 0 0 1 313.5883 60.6922] cm
0 0 m
0 8.092 l
0 9.958 -0.998 10.904 -2.653 10.904 c
-3.6 10.904 -4.519 10.615 -5.176 10.195 c
-5.176 0 l
-8.671 0 l
-8.671 13.269 l
-5.308 13.532 l
-5.359 11.693 l
-5.255 11.693 l
-4.282 12.77 -2.68 13.715 -0.84 13.715 c
1.524 13.715 3.469 12.139 3.469 9.118 c
3.469 0 l
0 0 l
h
f
Q
q
[1 0 0 1 324.6547 60.4032] cm
0 0 m
-2.364 0 -3.889 1.472 -3.889 3.731 c
-3.889 4.493 -3.81 7.988 -3.81 10.089 c
-3.81 11.219 l
-5.071 11.219 l
-5.071 12.585 l
-0.735 16.606 l
-0.394 16.606 l
-0.394 13.689 l
3.862 13.689 l
3.862 11.219 l
-0.394 11.219 l
-0.394 11.009 -0.446 6.727 -0.446 4.914 c
-0.446 3.495 0.395 2.864 1.682 2.864 c
2.365 2.864 3.18 2.943 3.968 3.206 c
3.968 0.788 l
2.838 0.315 1.498 0 0 0 c
f
Q
q
[1 0 0 1 345.6781 60.6141] cm
0 0 m
-2.785 0 l
-5.334 6.647 l
-5.729 7.671 -5.991 9.432 -5.991 9.432 c
-5.991 9.432 -6.386 7.698 -6.753 6.647 c
-9.224 0 l
-11.93 0 l
-16.527 13.478 l
-12.691 13.478 l
-10.8 6.884 l
-10.484 5.833 -10.169 3.81 -10.169 3.81 c
-10.169 3.81 -9.775 5.78 -9.407 6.857 c
-7.068 13.478 l
-4.493 13.478 l
-2.05 6.857 l
-1.63 5.78 -1.314 3.862 -1.314 3.862 c
-1.314 3.862 -1.025 5.833 -0.684 6.91 c
1.182 13.478 l
4.624 13.478 l
0 0 l
h
f
Q
q
[1 0 0 1 357.7699 72.1214] cm
0 0 m
-1.682 0 -2.732 -1.603 -2.916 -3.205 c
2.732 -3.205 l
2.732 -1.444 1.734 0 0 0 c
5.833 -5.228 m
-3.048 -5.228 l
-2.969 -7.435 -1.497 -9.117 0.973 -9.117 c
2.549 -9.117 3.968 -8.775 5.544 -8.17 c
5.387 -10.641 l
3.758 -11.297 2.155 -11.718 0.026 -11.718 c
-3.994 -11.718 -6.437 -8.933 -6.437 -4.992 c
-6.437 -0.709 -3.652 2.286 0.289 2.286 c
4.1 2.286 5.965 -0.314 5.965 -3.311 c
5.965 -3.915 5.912 -4.755 5.833 -5.228 c
f
Q
q
[1 0 0 1 374.3529 70.4398] cm
0 0 m
-0.684 0.395 -1.576 0.657 -2.417 0.657 c
-3.231 0.657 -4.021 0.315 -4.467 -0.157 c
-4.467 -9.748 l
-7.962 -9.748 l
-7.962 3.521 l
-4.65 3.811 l
-4.756 1.419 l
-4.65 1.419 l
-3.968 2.917 -2.68 3.968 -1.235 3.968 c
-0.604 3.968 0.105 3.811 0.552 3.548 c
0 0 l
h
f
Q
q
[1 0 0 1 382.7631 71.6488] cm
0 0 m
-0.893 0 -1.786 -0.289 -2.391 -0.709 c
-2.391 -8.092 l
-1.892 -8.434 -0.998 -8.67 -0.236 -8.67 c
2.076 -8.67 3.39 -6.831 3.39 -4.387 c
3.39 -1.655 2.05 0 0 0 c
-0.394 -11.14 m
-1.13 -11.14 -1.944 -10.957 -2.391 -10.72 c
-2.391 -17.657 l
-5.886 -17.657 l
-5.886 2.313 l
-2.522 2.575 l
-2.574 0.788 l
-2.47 0.788 l
-1.497 1.971 0.026 2.759 1.524 2.759 c
4.835 2.759 6.937 -0.053 6.937 -3.783 c
6.937 -8.198 4.073 -11.14 -0.394 -11.14 c
f
Q
q
[1 0 0 1 150.9418 23.3465] cm
0 0 m
0 20.628 l
8.251 20.628 l
8.251 18.318 l
2.476 18.318 l
2.476 11.123 l
7.03 11.123 l
7.03 8.813 l
2.476 8.813 l
2.476 0 l
0 0 l
h
f
Q
q
[1 0 0 1 166.1566 30.9051] cm
0 0 m
-2.542 -0.43 -3.499 -1.98 -3.499 -3.631 c
-3.499 -5.05 -2.806 -5.743 -1.849 -5.743 c
-1.155 -5.743 -0.462 -5.017 0 -4.258 c
0 0 l
h
3.268 -7.855 m
1.584 -8.054 0.527 -7.559 0.132 -6.304 c
0 -6.304 l
-0.462 -7.229 -1.32 -7.987 -2.772 -7.987 c
-4.521 -7.987 -5.908 -6.271 -5.908 -3.895 c
-5.908 -1.122 -4.126 1.419 0 1.782 c
0 3.135 l
0 4.72 -0.562 5.842 -2.047 5.842 c
-2.938 5.842 -4.191 5.115 -5.149 4.093 c
-5.512 6.304 l
-4.588 7.359 -3.037 7.987 -1.749 7.987 c
1.122 7.987 2.343 5.677 2.343 3.234 c
2.343 -4.786 l
2.343 -5.545 2.64 -5.875 3.465 -5.875 c
3.268 -7.855 l
h
f
Q
q
[1 0 0 1 180.2475 24.3367] cm
0 0 m
-0.759 -0.891 -1.849 -1.419 -3.168 -1.419 c
-6.337 -1.419 -8.152 1.287 -8.152 6.535 c
-8.152 11.75 -6.304 14.556 -3.036 14.556 c
-1.749 14.556 -0.759 14.061 0.033 13.235 c
-0.528 10.892 l
-1.056 11.75 -2.079 12.443 -2.904 12.443 c
-4.885 12.443 -5.71 10.43 -5.71 6.568 c
-5.71 2.607 -4.852 0.693 -2.806 0.693 c
-1.947 0.693 -1.155 1.354 -0.528 2.244 c
0 0 l
h
f
Q
q
[1 0 0 1 189.5199 22.9832] cm
0 0 m
0 1.947 l
-0.792 0.595 -2.079 -0.065 -3.234 -0.065 c
-5.215 -0.065 -6.304 1.75 -6.304 3.73 c
-6.304 15.479 l
-3.96 15.479 l
-3.96 4.192 l
-3.96 2.806 -3.366 2.212 -2.409 2.212 c
-1.617 2.212 -0.759 2.971 0 3.961 c
0 15.479 l
2.344 15.479 l
2.344 0.43 l
0 0 l
h
f
Q
q
[1 0 0 1 195.724 23.3465] cm
0 0 m
0 22.245 l
2.343 22.675 l
2.343 0 l
0 0 l
h
f
Q
q
[1 0 0 1 207.6703 23.6112] cm
0 0 m
-0.627 -0.43 -1.518 -0.693 -2.178 -0.693 c
-3.861 -0.693 -5.479 0.165 -5.479 3.993 c
-5.479 12.574 l
-6.997 12.739 l
-6.997 14.323 l
-5.479 14.918 l
-5.479 18.317 l
-3.135 18.317 l
-3.135 14.852 l
-0.099 14.852 l
-0.23 12.739 l
-3.135 12.739 l
-3.135 3.762 l
-3.135 2.013 -2.541 1.452 -1.782 1.452 c
-1.287 1.452 -0.692 1.782 -0.297 2.145 c
0 0 l
h
f
Q
q
[1 0 0 1 213.1801 23.4129] cm
0 0 m
-3.927 15.05 l
-1.584 15.05 l
1.09 3.895 l
3.664 15.05 l
6.007 15.05 l
0.925 -4.588 l
0.363 -6.733 -0.891 -7.889 -2.31 -7.889 c
-3.003 -7.889 -3.729 -7.657 -4.488 -7.096 c
-3.993 -5.017 l
-3.399 -5.512 -2.904 -5.743 -2.475 -5.743 c
-1.848 -5.743 -1.353 -5.313 -1.089 -4.258 c
0 0 l
h
f
Q
q
[1 0 0 1 234.3676 30.8719] cm
0 0 m
0 3.961 -0.793 5.908 -2.509 5.908 c
-4.225 5.908 -4.984 3.895 -4.984 0.033 c
-4.984 -3.928 -4.225 -5.842 -2.509 -5.842 c
-0.793 -5.842 0 -3.796 0 0 c
-7.427 0 m
-7.427 5.215 -5.611 8.021 -2.442 8.021 c
0.726 8.021 2.442 5.313 2.442 0.066 c
2.442 -5.148 0.561 -7.954 -2.542 -7.954 c
-5.677 -7.954 -7.427 -5.248 -7.427 0 c
f
Q
q
[1 0 0 1 240.0102 23.3465] cm
0 0 m
0 12.839 l
-1.519 13.004 l
-1.519 14.588 l
0 15.183 l
0 18.021 l
0 21.981 1.617 22.972 3.433 22.972 c
4.158 22.972 4.852 22.74 5.545 22.312 c
5.083 20.166 l
4.621 20.529 4.158 20.793 3.729 20.793 c
2.904 20.793 2.344 20.199 2.344 18.252 c
2.344 15.116 l
5.05 15.116 l
4.918 13.004 l
2.344 13.004 l
2.344 0 l
0 0 l
h
f
Q
q
[1 0 0 1 253.2426 26.9774] cm
0 0 m
1.023 -1.155 2.014 -1.782 3.301 -1.782 c
4.885 -1.782 6.106 -0.562 6.106 1.386 c
6.106 3.234 5.215 4.653 3.268 5.842 c
0.925 7.261 -0.726 9.34 -0.726 12.014 c
-0.726 15.314 1.65 17.427 4.192 17.427 c
5.743 17.427 7.13 16.865 8.119 15.842 c
7.427 13.499 l
6.535 14.489 5.479 15.149 4.357 15.149 c
2.707 15.149 1.617 13.961 1.617 12.146 c
1.617 10.43 2.607 9.143 4.918 7.69 c
7.295 6.205 8.449 4.126 8.449 1.485 c
8.449 -1.849 6.205 -4.06 3.235 -4.06 c
1.65 -4.06 0.33 -3.433 -0.692 -2.344 c
0 0 l
h
f
Q
q
[1 0 0 1 271.6918 30.8719] cm
0 0 m
0 3.961 -0.793 5.908 -2.509 5.908 c
-4.225 5.908 -4.984 3.895 -4.984 0.033 c
-4.984 -3.928 -4.225 -5.842 -2.509 -5.842 c
-0.793 -5.842 0 -3.796 0 0 c
-7.427 0 m
-7.427 5.215 -5.611 8.021 -2.442 8.021 c
0.726 8.021 2.442 5.313 2.442 0.066 c
2.442 -5.148 0.561 -7.954 -2.542 -7.954 c
-5.677 -7.954 -7.427 -5.248 -7.427 0 c
f
Q
q
[1 0 0 1 285.2221 24.3367] cm
0 0 m
-0.759 -0.891 -1.849 -1.419 -3.168 -1.419 c
-6.337 -1.419 -8.152 1.287 -8.152 6.535 c
-8.152 11.75 -6.304 14.556 -3.036 14.556 c
-1.749 14.556 -0.759 14.061 0.033 13.235 c
-0.528 10.892 l
-1.056 11.75 -2.079 12.443 -2.904 12.443 c
-4.885 12.443 -5.71 10.43 -5.71 6.568 c
-5.71 2.607 -4.852 0.693 -2.806 0.693 c
-1.947 0.693 -1.155 1.354 -0.528 2.244 c
0 0 l
h
f
Q
q
[1 0 0 1 288.3227 23.3465] cm
0 0 m
0 15.051 l
2.344 15.479 l
2.344 0 l
0 0 l
h
-0.495 20.431 m
-0.495 21.453 0.1 22.345 1.188 22.345 c
2.277 22.345 2.872 21.453 2.872 20.431 c
2.872 19.407 2.277 18.516 1.188 18.516 c
0.1 18.516 -0.495 19.407 -0.495 20.431 c
f
Q
q
[1 0 0 1 299.7748 30.9051] cm
0 0 m
-2.542 -0.43 -3.499 -1.98 -3.499 -3.631 c
-3.499 -5.05 -2.806 -5.743 -1.849 -5.743 c
-1.155 -5.743 -0.462 -5.017 0 -4.258 c
0 0 l
h
3.268 -7.855 m
1.584 -8.054 0.527 -7.559 0.132 -6.304 c
0 -6.304 l
-0.462 -7.229 -1.32 -7.987 -2.772 -7.987 c
-4.521 -7.987 -5.908 -6.271 -5.908 -3.895 c
-5.908 -1.122 -4.126 1.419 0 1.782 c
0 3.135 l
0 4.72 -0.562 5.842 -2.047 5.842 c
-2.938 5.842 -4.191 5.115 -5.149 4.093 c
-5.512 6.304 l
-4.588 7.359 -3.037 7.987 -1.75 7.987 c
1.122 7.987 2.343 5.677 2.343 3.234 c
2.343 -4.786 l
2.343 -5.545 2.64 -5.875 3.465 -5.875 c
3.268 -7.855 l
h
f
Q
q
[1 0 0 1 306.308 23.3465] cm
0 0 m
0 22.245 l
2.343 22.675 l
2.343 0 l
0 0 l
h
f
Q
q
[1 0 0 1 318.3197 26.9774] cm
0 0 m
1.023 -1.155 2.014 -1.782 3.301 -1.782 c
4.885 -1.782 6.106 -0.562 6.106 1.386 c
6.106 3.234 5.215 4.653 3.268 5.842 c
0.925 7.261 -0.726 9.34 -0.726 12.014 c
-0.726 15.314 1.65 17.427 4.192 17.427 c
5.743 17.427 7.13 16.865 8.119 15.842 c
7.427 13.499 l
6.535 14.489 5.479 15.149 4.357 15.149 c
2.707 15.149 1.617 13.961 1.617 12.146 c
1.617 10.43 2.607 9.143 4.918 7.69 c
7.295 6.205 8.449 4.126 8.449 1.485 c
8.449 -1.849 6.205 -4.06 3.235 -4.06 c
1.65 -4.06 0.33 -3.433 -0.692 -2.344 c
0 0 l
h
f
Q
q
[1 0 0 1 337.4945 24.3367] cm
0 0 m
-0.759 -0.891 -1.849 -1.419 -3.168 -1.419 c
-6.337 -1.419 -8.152 1.287 -8.152 6.535 c
-8.152 11.75 -6.304 14.556 -3.036 14.556 c
-1.749 14.556 -0.759 14.061 0.033 13.235 c
-0.528 10.892 l
-1.056 11.75 -2.079 12.443 -2.904 12.443 c
-4.885 12.443 -5.71 10.43 -5.71 6.568 c
-5.71 2.607 -4.852 0.693 -2.806 0.693 c
-1.947 0.693 -1.155 1.354 -0.528 2.244 c
0 0 l
h
f
Q
q
[1 0 0 1 340.5951 23.3465] cm
0 0 m
0 15.051 l
2.344 15.479 l
2.344 0 l
0 0 l
h
-0.495 20.431 m
-0.495 21.453 0.1 22.345 1.188 22.345 c
2.277 22.345 2.872 21.453 2.872 20.431 c
2.872 19.407 2.277 18.516 1.188 18.516 c
0.1 18.516 -0.495 19.407 -0.495 20.431 c
f
Q
q
[1 0 0 1 352.8061 32.8524] cm
0 0 m
0 2.838 -0.66 3.928 -1.849 3.928 c
-3.003 3.928 -3.961 2.311 -4.093 -0.562 c
0 -0.562 l
0 0 l
h
1.65 -8.516 m
0.825 -9.406 -0.066 -9.935 -1.519 -9.935 c
-4.785 -9.935 -6.535 -7.229 -6.535 -1.98 c
-6.535 3.333 -4.423 6.04 -1.716 6.04 c
1.023 6.04 2.244 3.763 2.244 -0.1 c
2.244 -0.495 2.179 -1.749 2.079 -2.409 c
-4.126 -2.409 l
-4.06 -6.073 -3.201 -7.822 -1.254 -7.822 c
-0.231 -7.822 0.462 -7.162 1.122 -6.271 c
1.65 -8.516 l
h
f
Q
q
[1 0 0 1 364.5551 23.3465] cm
0 0 m
0 11.288 l
0 12.674 -0.595 13.269 -1.552 13.269 c
-2.344 13.269 -3.234 12.509 -3.961 11.519 c
-3.961 0 l
-6.304 0 l
-6.304 15.051 l
-3.961 15.479 l
-3.961 13.532 l
-3.169 14.886 -1.882 15.546 -0.727 15.546 c
1.254 15.546 2.343 13.73 2.343 11.75 c
2.343 0 l
0 0 l
h
f
Q
q
[1 0 0 1 378.2494 24.3367] cm
0 0 m
-0.759 -0.891 -1.849 -1.419 -3.168 -1.419 c
-6.337 -1.419 -8.152 1.287 -8.152 6.535 c
-8.152 11.75 -6.304 14.556 -3.036 14.556 c
-1.749 14.556 -0.759 14.061 0.033 13.235 c
-0.528 10.892 l
-1.056 11.75 -2.079 12.443 -2.904 12.443 c
-4.885 12.443 -5.71 10.43 -5.71 6.568 c
-5.71 2.607 -4.852 0.693 -2.806 0.693 c
-1.947 0.693 -1.155 1.354 -0.528 2.244 c
0 0 l
h
f
Q
q
[1 0 0 1 386.8959 32.8524] cm
0 0 m
0 2.838 -0.66 3.928 -1.849 3.928 c
-3.003 3.928 -3.961 2.311 -4.093 -0.562 c
0 -0.562 l
0 0 l
h
1.65 -8.516 m
0.825 -9.406 -0.066 -9.935 -1.519 -9.935 c
-4.785 -9.935 -6.535 -7.229 -6.535 -1.98 c
-6.535 3.333 -4.423 6.04 -1.716 6.04 c
1.023 6.04 2.244 3.763 2.244 -0.1 c
2.244 -0.495 2.179 -1.749 2.079 -2.409 c
-4.126 -2.409 l
-4.06 -6.073 -3.201 -7.822 -1.254 -7.822 c
-0.231 -7.822 0.462 -7.162 1.122 -6.271 c
1.65 -8.516 l
h
f
Q
q
[1 0 0 1 392.142 26.1854] cm
0 0 m
0.891 -0.727 1.848 -1.188 2.806 -1.188 c
4.06 -1.188 4.818 -0.265 4.818 0.957 c
4.818 2.178 4.158 3.003 2.574 3.928 c
0.627 5.082 -0.528 6.436 -0.528 8.614 c
-0.528 11.057 1.32 12.707 3.631 12.707 c
4.852 12.707 5.974 12.212 6.7 11.684 c
6.205 9.571 l
5.38 10.165 4.521 10.595 3.598 10.595 c
2.508 10.595 1.716 9.868 1.716 8.647 c
1.716 7.492 2.211 6.732 3.828 5.742 c
5.742 4.555 7.062 3.201 7.062 0.99 c
7.062 -1.552 5.215 -3.268 2.871 -3.268 c
1.65 -3.268 0.396 -2.806 -0.495 -2.112 c
0 0 l
h
f
Q
[/Separation (SW R=173 G=165 B=0) /DeviceRGB
{ dup 0 lt { pop 0 } { dup 1 gt { pop 1 } if } ifelse
0 index 1 exp -0.321569 mul 1 add
dup 0 lt { pop 0 } { dup 1 gt { pop 1 } if } ifelse
1 index 1 exp -0.352941 mul 1 add
dup 0 lt { pop 0 } { dup 1 gt { pop 1 } if } ifelse
2 index 1 exp -1 mul 1 add
dup 0 lt { pop 0 } { dup 1 gt { pop 1 } if } ifelse
4 3 roll pop 
}
] {} cs
[1] sc
[1] sc
q
[1 0 0 1 130.9423 23.3455] cm
0 0 m
0 0 l
-1.565 0 -2.834 1.27 -2.834 2.835 c
-2.834 18.025 l
-2.834 19.591 -1.565 20.86 0 20.86 c
1.565 20.86 2.835 19.591 2.835 18.025 c
2.835 2.835 l
2.835 1.27 1.565 0 0 0 c
f
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%EOF
