%!PS-Adobe-3.0 EPSF-3.0
%%Title: E:\TEX\BILDER\GRAPHIC\IFMLOGOG.EPS
%%Creator: Micrografx Graphics Engine
%%CreationDate: Wed May 10 09:46:38 2000
%%BoundingBox: 1873 0 3045 642 
%%Pages: (atend)
%%LanguageLevel: 1
%%EndComments
%%BeginProlog
%%BeginResource: procset RangerDict 1 1
/RangerDict 150 dict def RangerDict begin /bd{bind def}bind def /ld{load def}bd 
/p/closepath ld /cc/concat ld /v/curveto ld /e/eofill ld /f/fill ld 
/gr/grestore ld /gs/gsave ld /l/lineto ld /m/moveto ld /n/newpath ld /r/rlineto 
ld /sc/scale ld /sd/setdash ld /g/setgray ld /lc/setlinecap ld /lj/setlinejoin 
ld /lw/setlinewidth ld /c/setrgbcolor ld /sp/showpage ld /s/stroke ld 
/tf/transform ld /tr/translate ld /xd{exch def}bd /min{2 copy gt{exch} if 
pop}bd /arct where {pop} {/arct{arcto pop pop pop pop}bd} ifelse /setcmykcolor 
where {pop /k/setcmykcolor ld} {/k{4 1 roll 3 {3 index add 1 min 1 exch sub 3 1 
roll} repeat c pop}bd} ifelse /MGX_CustomColor where {pop /x/MGX_CustomColor 
ld} {/x{exch pop dup 1 ne {4 {dup 6 -1 roll mul exch} repeat} if pop k}bd} 
ifelse /op{/MGX_Overprint exch 1 eq {true} {false} ifelse def}bd /_mx matrix 
def /smx{/_mx _mx currentmatrix def}bd /rmx{_mx setmatrix}bd /_ctm matrix def 
/sctm{/_ctm _ctm currentmatrix def /_res 72 72 matrix defaultmatrix dtransform 
_ctm idtransform pop abs def}bd /rctm{_ctm setmatrix}bd /el{smx tr sc 1 eq {0 
-1 m} if 0 0 1 -90 270 arc rmx}bd /ea{smx tr sc 1 eq {arcn} {arc} ifelse 1 eq 
{0 0 l} if rmx}bd /rt{1 eq {m} {l} ifelse 2 copy 0 r 0 exch r neg 0 r neg 0 
exch r}bd /rr{smx tr /_wy exch 3 index div def /_wx exch 3 index div def sc _wx 
2 div 0 3 -1 roll 1 eq {m} {l} ifelse 0 0 0 _wy 0.5 arct 0 _wy _wx _wy 0.5 arct 
_wx _wy _wx 0 0.5 arct _wx 0 0 0 0.5 arct _wx 2 div 0 l rmx}bd /clp{/_ct xd 
{{gs _ct 1 eq {eoclip} {clip} ifelse}stopped {gr currentflat 1 add setflat} 
{exit} ifelse} loop}bd /horz{_y1 _w 2 div add _w _y2 {dup _x1 exch m _x2 exch l 
s} for}bd /vert{_x1 _w 2 div add _w _x2 {dup _y1 m _y2 l s} for}bd /fdiag{_x1 
_w _x2 _y2 _y1 sub add{_y2 m _y2 _y1 sub neg dup r s} for}bd /bdiag{_x1 _y2 _y1 
sub sub _w _x2{_y2 m _y2 _y1 sub dup neg r s} for}bd /hf{/_ht xd clp rctm /_w 
_res 12 div def pathbbox _w div cvi 1 add _w mul /_y2 xd _w div cvi 1 add _w 
mul /_x2 xd _w div cvi _w mul /_y1 xd _w div cvi _w mul /_x1 xd 1 lw [] 0 sd n 
_ht 0 eq {horz} if _ht 1 eq {vert} if _ht 2 eq {fdiag} if _ht 3 eq {bdiag} if 
_ht 4 eq {horz vert} if _ht 5 eq {fdiag bdiag} if gr}bd /bf{/_im xd clp rctm 
/_w _res 12 div round def pathbbox _w div cvi 1 add _w mul /_y2 xd _w div cvi 1 
add _w mul /_x2 xd _w div cvi _w mul /_y1 xd _w div cvi _w mul /_x1 xd /_wx _x2 
_x1 sub def /_wy _y2 _y1 sub def /_swx _wx _w div cvi 8 mul def /_swy _wy _w 
div cvi 8 mul def /_ic 0 def _x1 _y1 tr _wx _wy sc _swx _swy false [_swx 0 0 
_swy 0 0] /_swx _swx 8 div def {_im _ic _swx div cvi 8 mod 1 getinterval /_ic 
_ic 1 add def} imagemask gr}bd /_rgb 3 string def /_cmyk 4 string def /_g 1 
string def /rgbtograyx{_g 0 currentfile _rgb readhexstring pop 0 get .3 mul 
_rgb 1 get .59 mul add _rgb 2 get .11 mul add cvi put _g}bd /rgbtogray{_g 0 
currentfile _rgb readstring pop 0 get .3 mul _rgb 1 get .59 mul add _rgb 2 get 
.11 mul add cvi put _g}bd /cmyktograyx{_g 0 currentfile _cmyk readhexstring pop 
0 get .3 mul _cmyk 1 get .59 mul add _cmyk 2 get .11 mul add _cmyk 3 get add 
cvi 255 min 255 exch sub put _g}bd /cmyktogray{_g 0 currentfile _cmyk 
readstring pop 0 get .3 mul _cmyk 1 get .59 mul add _cmyk 2 get .11 mul add 
_cmyk 3 get add cvi 255 min 255 exch sub put _g}bd /readimg{currentfile _imgstr 
readstring pop}bd /readimgx{currentfile _imgstr readhexstring pop}bd /i{gs tr 
sc /_imgstr exch string def [4 index 0 0 6 index 0 0] exch 1 eq {{readimg}} 
{{readimgx}} ifelse image gr}bd /colorimage where {pop /ic{gs tr sc /_imgstr 
exch string def /_p xd [4 index 0 0 6 index 0 0] exch 1 eq {{readimg}} 
{{readimgx}} ifelse false _p colorimage gr}bd} {/ic{gs tr sc /_imgstr exch 
string def /_p xd [4 index 0 0 6 index 0 0] exch 1 eq {_p 3 eq {{rgbtogray}} 
{{cmyktogray}} ifelse} {_p 3 eq {{rgbtograyx}} {{cmyktograyx}} ifelse} ifelse 
image gr}bd} ifelse /im{gs tr sc /_imgstr exch string def 1 eq {true} {false} 
ifelse [3 index 0 0 5 index 0 0] {readimgx} imagemask gr}bd 
/bullets{{/bullet}repeat} bd /WE[/grave/acute/circumflex/tilde/macron 
/breve/dotaccent/dieresis/ring/cedilla/hungarumlaut/ogonek/caron/dotlessi 18 
bullets StandardEncoding 32 95 getinterval aload pop 3 bullets 
/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl/circumflex 
/perthousand/Scaron/guilsinglleft/OE 4 bullets/quoteleft/quoteright 
/quotedblleft/quotedblright/bullet/endash/emdash/tilde/trademark/scaron 
/guilsinglright/oe 2 bullets /Ydieresis/space/exclamdown/cent/sterling 
/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine 
/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus 
/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla 
/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters 
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla 
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis 
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash 
/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave/aacute 
/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute/ecircumflex 
/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute 
/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex 
/udieresis/yacute/thorn/ydieresis]def WE dup 39/quotesingle put 96/grave put 
/selectfont where {pop} {/selectfont {exch findfont exch dup type /arraytype eq 
{makefont} {scalefont} ifelse setfont}bd} ifelse /_mxe matrix def /_mxf matrix 
def /we {/_fn xd FontDirectory _fn known {pop} {findfont dup maxlength dict 
/_fd xd {exch dup /FID ne {exch _fd 3 1 roll put} {pop pop} ifelse} forall _fd 
dup /FontName _fn put /Encoding WE put _fn _fd definefont pop} ifelse _fn} bd 
/fnt {/_ys xd /_xs xd /_asc xd /_itl exch dup 0 ne {10.0 div sin} if def [1 0 
_itl 1 0 0] [_xs 0 0 _ys neg 0 _asc] _mxf concatmatrix selectfont currentfont 
dup dup /FontInfo known {/FontInfo get} if /UnderlinePosition known not {pop 
/Courier findfont} if /FontInfo get /UnderlinePosition get 1000 div 0 exch _mxf 
tf /_ulpos xd pop 0 .3 _mxf tf /_sopos xd pop currentfont dup dup /FontInfo 
known {/FontInfo get} if /UnderlineThickness known not {pop /Courier findfont} 
if /FontInfo get /UnderlineThickness get 1000 div _ys mul /_ulsiz xd } bd /to 
{m show n} bd /tp {m false charpath} bd /ul {1 eq {/_pos _ulpos def} {/_pos 
_sopos def} ifelse 1 eq {gs [] 0 sd 0 lc _ulsiz lw _pos add m 0 r s gr} {_pos 
add _ulsiz 2 div add m 0 _ulsiz neg r 0 r 0 _ulsiz r p} ifelse} bd end 
%%EndResource
%%EndProlog
%%BeginSetup
RangerDict begin 0 2075 tr 0.036 -0.036 sc sctm 
%%EndSetup
/#copies 1 def

%%Page: 1 1 
%%BeginPageSetup
%%EndPageSetup
55539 55710 m 55539 56337 55394 56819 55105 57133 v 54816 57470 54406 57639 
53827 57639 v 53272 57639 52838 57470 52548 57133 v 52259 56819 52115 56337 
52115 55710 v 52115 52567 52115 49423 52115 46279 v 52115 45627 52259 45145 
52548 44831 v 52838 44518 53272 44349 53827 44349 v 54406 44349 54816 44518 
55105 44831 v 55394 45145 55539 45627 55539 46279 v 55539 49422 55539 52566 
55539 55710 v p 52018 41623 m 52018 41141 52186 40707 52548 40346 v 52910 39983 
53345 39814 53827 39814 v 54333 39814 54767 39983 55105 40346 v 55467 40683 
55636 41117 55636 41623 v 55636 42130 55467 42540 55105 42902 v 54744 43264 
54333 43433 53827 43433 v 53345 43433 52910 43264 52548 42902 v 52186 42540 
52018 42106 52018 41623 v 52018 41623 52018 41623 52018 41623 v p 62534 47002 m 
62534 49904 62534 52807 62534 55710 v 62534 56337 62389 56819 62100 57133 v 
61834 57470 61400 57639 60846 57639 v 60291 57639 59856 57494 59591 57157 v 
59326 56843 59182 56361 59182 55710 v 59182 52808 59182 49905 59182 47002 v 
58933 47002 58684 47002 58434 47002 v 57976 47002 57638 46906 57396 46689 v 
57180 46496 57035 46207 57035 45796 v 57035 45386 57180 45097 57396 44880 v 
57638 44687 57976 44590 58434 44590 v 58683 44590 58932 44590 59182 44590 v 
59182 44156 59182 43722 59182 43288 v 59182 42082 59495 41213 60098 40659 v 
60701 40104 61666 39814 62992 39814 v 63740 39814 64295 39935 64632 40201 v 
64994 40466 65163 40876 65163 41407 v 65163 41768 65066 42058 64874 42275 v 
64681 42492 64440 42588 64126 42588 v 64029 42588 63885 42588 63691 42564 v 
63523 42540 63378 42540 63306 42540 v 63017 42540 62799 42613 62703 42757 v 
62583 42902 62534 43191 62534 43578 v 62534 43915 62534 44252 62534 44590 v 
62879 44590 63225 44590 63571 44590 v 64029 44590 64367 44687 64608 44880 v 
64825 45073 64946 45386 64946 45796 v 64946 46207 64825 46496 64608 46689 v 
64608 46689 l 64367 46906 64029 47002 63571 47002 v 63226 47002 62880 47002 
62534 47002 v p 76740 46014 m 77199 45386 77705 44928 78332 44615 v 78935 44301 
79635 44156 80383 44156 v 81685 44156 82698 44542 83446 45290 v 84193 46038 
84579 47051 84579 48353 v 84579 50805 84579 53257 84579 55710 v 84579 56361 
84434 56819 84169 57133 v 83880 57470 83470 57639 82891 57639 v 82336 57639 
81926 57470 81637 57133 v 81347 56819 81202 56337 81202 55710 v 81202 53491 
81202 51272 81202 49053 v 81202 48425 81034 47943 80696 47605 v 80358 47268 
79900 47099 79297 47099 v 78646 47099 78115 47316 77705 47750 v 77319 48185 
77126 48763 77126 49535 v 77126 51593 77126 53651 77126 55710 v 77126 56337 
76982 56819 76692 57133 v 76427 57470 75992 57639 75438 57639 v 74883 57639 
74473 57470 74183 57133 v 73918 56819 73774 56361 73774 55710 v 73774 53499 
73774 51288 73774 49077 v 73774 48450 73605 47967 73291 47629 v 72978 47292 
72519 47123 71916 47123 v 71241 47123 70711 47340 70324 47774 v 69939 48209 
69745 48787 69745 49559 v 69745 51609 69745 53659 69745 55710 v 69745 56337 
69601 56819 69311 57133 v 69046 57470 68612 57639 68057 57639 v 67503 57639 
67068 57470 66803 57133 v 66803 57133 l 66513 56819 66369 56337 66369 55710 v 
66369 52567 66369 49423 66369 46279 v 66369 45651 66513 45193 66779 44855 v 
67068 44518 67454 44349 67985 44349 v 68467 44349 68853 44494 69118 44759 v 
69408 45024 69552 45435 69625 45989 v 70083 45362 70590 44904 71193 44590 v 
71772 44277 72447 44132 73171 44132 v 73990 44132 74666 44277 75245 44590 v 
75824 44880 76330 45362 76740 46014 v 76740 46014 76740 46014 76740 46014 v p 
0.753 g e 
%%PageTrailer
%%Trailer
end 
%%Pages: 1 
%%EOF
